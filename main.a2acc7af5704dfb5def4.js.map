{"version":3,"sources":["webpack:///./index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","all","map","user","reject","logger2","updatedUsers","table","makeTransaction","transaction","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"4KAAMA,EAAQ,SAAAC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KACPA,OAIDI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAEvBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,GAEjB,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,OAAOb,QAAQc,IACbF,EAASG,KAAI,SAAAC,GACX,OAAO,IAAIhB,SAAQ,SAACC,EAASgB,GAM3BhB,EAJEe,EAAKP,OAASI,EACV,CAAEJ,KAAMO,EAAKP,KAAMC,QAASM,EAAKN,QACjCM,WAQRE,EAAU,SAAAC,GAAY,OAAId,QAAQe,MAAMD,IAE9CR,EAAgBH,EAAO,SAASD,KAAKW,GACrCP,EAAgBH,EAAO,OAAOD,KAAKW,GAEnC,IAIMG,EAAkB,SAAAC,GACtB,OAAO,IAAItB,SAAQ,SAACC,EAASgB,GAC3B,IAN+BM,EAAKC,EAM9B1B,GANyByB,EAMS,IANJC,EAMS,IALxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAOlDrB,YAAW,WACT,IAAM0B,EAAKN,EAAYM,GACJH,KAAKE,SAAW,GAGjC1B,EAAQ,CAAE2B,KAAI9B,UAEdmB,EAAOW,KAER9B,OAID+B,EAAa,SAAC,GAAkB,IAAhBD,EAAgB,EAAhBA,GAAI9B,EAAY,EAAZA,MACxBO,QAAQC,IAAR,eAA2BsB,EAA3B,iBAA8C9B,EAA9C,QAGIgC,EAAW,SAAAF,GACfvB,QAAQ0B,KAAR,gCAA6CH,EAA7C,8BAGFP,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAEhET,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAEhET,EAAgB,CAAEO,GAAI,GAAII,OAAQ,KAAMzB,KAAKsB,GAAYI,MAAMH,GAE/DT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,K","file":"main.a2acc7af5704dfb5def4.js","sourcesContent":["const delay = ms => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger);\r\ndelay(1000).then(logger);\r\ndelay(1500).then(logger);\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  return Promise.all(\r\n    allUsers.map(user => {\r\n      return new Promise((resolve, reject) => {\r\n        const updatedUser =\r\n          user.name === userName\r\n            ? { name: user.name, active: !user.active }\r\n            : user;\r\n\r\n        resolve(updatedUser);\r\n      });\r\n    }),\r\n  );\r\n};\r\n\r\nconst logger2 = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger2);\r\ntoggleUserState(users, 'Lux').then(logger2);\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n      const id = transaction.id;\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({ id, delay });\r\n      } else {\r\n        reject(id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({ id, delay }) => {\r\n  console.log(`Transaction ${id} processed in ${delay} ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n"],"sourceRoot":""}